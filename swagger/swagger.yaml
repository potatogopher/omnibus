basePath: /
consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  CreatePostPayload:
    properties:
      content:
        description: Content of the blog post
        type: string
      title:
        description: Title of the blog post
        type: string
    required:
    - title
    - content
    title: CreatePostPayload
    type: object
  CreateUserPayload:
    properties:
      disabled:
        description: Flag for if the user is disabled or not
        type: boolean
      email:
        description: Email of user
        format: email
        type: string
      givenName:
        type: string
      password:
        type: string
      surname:
        description: Surname of user
        type: string
    required:
    - email
    - password
    title: CreateUserPayload
    type: object
  Post:
    description: A blog post
    example:
      content: Dolorem quam consequatur et ut.
      href: Velit quis libero ea quia repellat quam.
      id: 6.2523646e+18
      title: Qui dolor.
    properties:
      content:
        description: Content of the blog post
        example: Et quis.
        type: string
      href:
        description: API href of the post
        example: Non et magnam blanditiis repellat quia quo.
        type: string
      id:
        description: ID of post
        example: 4.1688338e+18
        format: int64
        type: integer
      title:
        description: Title of the blog post
        example: Et consectetur non qui reiciendis voluptatem.
        type: string
    required:
    - id
    - href
    - title
    - content
    title: 'Mediatype identifier: application/vnd.post+json'
    type: object
  UpdatePostPayload:
    properties:
      content:
        description: Content of the blog post
        type: string
      title:
        description: Title of the blog post
        type: string
    title: UpdatePostPayload
    type: object
  UpdateUserPayload:
    properties:
      disabled:
        description: Flag for if the user is disabled or not
        type: boolean
      email:
        description: Email of user
        format: email
        type: string
      givenName:
        type: string
      newPassword:
        type: string
      oldPassword:
        type: string
      surname:
        description: Surname of user
        type: string
    title: UpdateUserPayload
    type: object
  User:
    description: A user account
    example:
      disabled: true
      email: Odit optio hic.
      given_name: Quos harum dolores eos nobis fugit.
      href: Necessitatibus veritatis.
      id: 8.6423983e+18
      passwordHash: Et harum.
      passwordSalt: Magnam illum exercitationem sed doloremque sint ipsam.
      surname: Rerum voluptas.
    properties:
      disabled:
        description: Flag for if the user is disabled or not
        example: true
        type: boolean
      email:
        description: Email of user
        example: zola@morissette.biz
        format: email
        type: string
      given_name:
        description: Given name of user
        example: Nobis ut fuga nihil consectetur corporis.
        type: string
      href:
        description: API href of the user
        example: Placeat reiciendis sed.
        type: string
      id:
        description: ID of user
        example: 1.0114296e+17
        format: int64
        type: integer
      passwordHash:
        description: Hashed password of user
        example: Cumque molestiae nulla fuga.
        type: string
      passwordSalt:
        description: Salted password of user
        example: Nulla porro et.
        type: string
      surname:
        description: Surname of user
        example: Dolor fugiat impedit nesciunt occaecati.
        type: string
    required:
    - id
    - href
    - email
    - passwordSalt
    - passwordHash
    - disabled
    title: 'Mediatype identifier: application/vnd.user+json'
    type: object
host: localhost
info:
  contact:
    email: nick@rucci.io
    name: Nick Rucci
    url: http://rucci.io
  description: Blog for Nick Rucci
  license:
    name: MIT
    url: https://github.com/nicholasrucci/goa-atlas/blob/master/LICENSE
  title: rucci.io
  version: ""
paths:
  posts:
    post:
      description: Create new post
      operationId: post#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreatePostPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /posts/[0-9]+
              type: string
      schemes:
      - http
  posts/{postID}:
    delete:
      operationId: post#delete
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
    get:
      description: Retrieve post with given id.
      operationId: post#show
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Post'
        "404":
          description: Not Found
      schemes:
      - http
    put:
      description: Change post attributes
      operationId: post#update
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdatePostPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
  users:
    post:
      description: Create new user
      operationId: user#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateUserPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /user/[0-9]+
              type: string
      schemes:
      - http
  users/{userID}:
    delete:
      operationId: user#delete
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
    get:
      description: Retrieve user with given id.
      operationId: user#show
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
      schemes:
      - http
    put:
      description: Change user attributes
      operationId: user#update
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/Post'
schemes:
- http
swagger: "2.0"
