basePath: /
consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Authorize:
    description: Token authorization response
    example:
      access_token: Et consectetur non qui reiciendis voluptatem.
      expires_in: 6.0189097e+18
      token_type: Quam consequatur et ut magnam velit.
    properties:
      access_token:
        description: access token
        example: Et quis.
        type: string
      expires_in:
        description: Time to expiration in seconds
        example: 3.464305e+18
        format: int64
        type: integer
      token_type:
        description: type of token
        example: Et magnam blanditiis repellat quia quo iure.
        type: string
    title: 'Mediatype identifier: application/vnd.authorize+json'
    type: object
  CreatePostPayload:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - title
    - content
    title: CreatePostPayload
    type: object
  CreateUserPayload:
    properties:
      disabled:
        description: Flag for if the user is disabled or not
        type: boolean
      email:
        description: Email of user
        format: email
        type: string
      givenName:
        type: string
      password:
        type: string
      surname:
        description: Surname of user
        type: string
    required:
    - email
    - password
    title: CreateUserPayload
    type: object
  RefreshAuthPayload:
    properties:
      application:
        description: UUID of requesting application
        type: string
      email:
        description: email
        type: string
      password:
        description: password
        type: string
    title: RefreshAuthPayload
    type: object
  TokenAuthPayload:
    properties:
      application:
        description: UUID of requesting application
        type: string
      email:
        description: email
        type: string
      password:
        description: password
        type: string
    title: TokenAuthPayload
    type: object
  UpdatePostPayload:
    properties:
      content:
        type: string
      title:
        type: string
    title: UpdatePostPayload
    type: object
  UpdateUserPayload:
    properties:
      disabled:
        description: Flag for if the user is disabled or not
        type: boolean
      email:
        description: Email of user
        format: email
        type: string
      givenName:
        type: string
      newPassword:
        type: string
      oldPassword:
        type: string
      surname:
        description: Surname of user
        type: string
    title: UpdateUserPayload
    type: object
  User:
    description: A user account
    example:
      disabled: false
      email: Voluptates ducimus.
      given_name: Tempora quis ducimus consequatur excepturi vel et.
      href: Est voluptas aliquid dolorem.
      id: 1.1933749e+18
      passwordHash: Occaecati molestias facere molestiae quia.
      passwordSalt: Sed excepturi ducimus aut tempore deleniti.
      surname: Minima enim inventore molestias quia iusto.
    properties:
      disabled:
        description: Flag for if the user is disabled or not
        example: true
        type: boolean
      email:
        description: Email of user
        example: theron_maggio@ohararuecker.org
        format: email
        type: string
      given_name:
        description: Given name of user
        example: Doloremque sint ipsam aut rerum voluptas.
        type: string
      href:
        description: API href of the user
        example: Ab amet occaecati ut voluptates.
        type: string
      id:
        description: ID of user
        example: 1.3749972e+18
        format: int64
        type: integer
      passwordHash:
        description: Hashed password of user
        example: Optio accusantium qui.
        type: string
      passwordSalt:
        description: Salted password of user
        example: Voluptatem odit nemo commodi asperiores non.
        type: string
      surname:
        description: Surname of user
        example: Repellendus rem possimus soluta voluptatem odit sint.
        type: string
    required:
    - id
    - href
    - email
    - passwordSalt
    - passwordHash
    - disabled
    title: 'Mediatype identifier: application/vnd.user+json'
    type: object
host: localhost
info:
  contact:
    email: nick@rucci.io
    name: Nick Rucci
    url: http://rucci.io
  description: Blog for Nick Rucci
  license:
    name: MIT
    url: https://github.com/nicholasrucci/goa-atlas/blob/master/LICENSE
  title: rucci.io
  version: ""
paths:
  auth/{provider}:
    get:
      description: OAUTH2 login endpoint
      operationId: auth#oauth
      parameters:
      - in: path
        name: provider
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Authorize'
      schemes:
      - http
  auth/{provider}/callback:
    get:
      description: OAUTH2 callback endpoint
      operationId: auth#callback
      parameters:
      - in: path
        name: provider
        required: true
        type: string
      responses:
        "200":
          description: OK
      schemes:
      - http
  auth/refresh:
    post:
      description: Obtain a refreshed access token
      operationId: auth#refresh
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RefreshAuthPayload'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Authorize'
      schemes:
      - http
  auth/token:
    post:
      description: Obtain an access token
      operationId: auth#token
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TokenAuthPayload'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Authorize'
      schemes:
      - http
  posts:
    post:
      description: Create new post
      operationId: post#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreatePostPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /posts/[0-9]+
              type: string
      schemes:
      - http
  posts/{postID}:
    delete:
      operationId: post#delete
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
    get:
      description: Retrieve post with given id.
      operationId: post#show
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
      schemes:
      - http
    put:
      description: Change post attributes
      operationId: post#update
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdatePostPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
  users:
    post:
      description: Create new user
      operationId: user#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateUserPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /user/[0-9]+
              type: string
      schemes:
      - http
  users/{userID}:
    delete:
      operationId: user#delete
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
    get:
      description: Retrieve user with given id.
      operationId: user#show
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
      schemes:
      - http
    put:
      description: Change user attributes
      operationId: user#update
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/Authorize'
schemes:
- http
swagger: "2.0"
